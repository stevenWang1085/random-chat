name: Laravel CI - testing

on:
  push:
    branches:
      - develop
env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
  ONLINE_DOCKER_IMAGE: ${{ secrets.ONLINE_DOCKER_IMAGE }}
  PROJECT_ENV_KEY: ${{ secrets.PROJECT_ENV_KEY }}

jobs:
  laravel-ci:

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Actions checkout
        uses: actions/checkout@v2
      - name: Copy .env
        run: |
          composer install
          php artisan env:decrypt --key=${{ secrets.PROJECT_ENV_KEY }} --env=testing --force
          cp .env.testing .env
          php artisan key:generate
      - name: see .env
        run: cat .env
      - name: Build the stack
        run: |
          docker-compose --env-file .env up -d
      - name: see docker
        run: docker ps
      - name: Execute tests via PHPUnit
        run: |
          docker-compose exec -T chat php artisan env:decrypt --key=${{ secrets.PROJECT_ENV_KEY }} --env=testing --force
          docker-compose exec -T chat cp .env.testing .env
          docker-compose exec -T chat php artisan jwt:secret
          docker-compose exec -T chat php artisan config:cache
          docker-compose exec -T chat php artisan test
#      - name: Run the build process with Docker
#        uses: addnab/docker-run-action@v3
#        with:
#            image: ${{ secrets.ONLINE_DOCKER_IMAGE }}/chat-system:latest
#            options: -v ${{ github.workspace }}:/var/www
#            run: |
#                cd /var/www
#                docker-compose up -d
#      - name: Copy .env
#        run: |
#          php artisan env:decrypt --key=${{ secrets.PROJECT_ENV_KEY }} --env=testing --force
#          cp .env.testing .env
#      - name: Install Dependencies
#        run: |
#          composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
#          composer dump-autoload
#      - name: Generate key
#        run: php artisan key:generate
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#      - name: Create Database And Set Application
#        run: |
#          php artisan cache:clear
#          php artisan config:clear
#          php artisan migrate
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        run: php artisan test
