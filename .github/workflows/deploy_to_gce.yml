name: Laravel CD - testing and deploy to GCE

on:
  push:
    branches:
      - master
    tags:
      - v1.*
env:
  PROJECT_ID: ${{ secrets.GCE_PROJECT }}
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}
  ONLINE_DOCKER_IMAGE: ${{ secrets.ONLINE_DOCKER_IMAGE }}
  PROJECT_ENV_KEY: ${{ secrets.PROJECT_ENV_KEY }}

jobs:
  laravel-cd:

    runs-on: ubuntu-latest

    steps:
      - name: Actions checkout
        uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Copy .env
        run: |
          composer install
          php artisan env:decrypt --key=${{ secrets.PROJECT_ENV_KEY }} --env=testing --force
          cp .env.testing .env
          rm -rf vendor
      - name: Build the stack
        run: |
          docker-compose up -d
      - name: Execute tests via PHPUnit
        run: |
          docker-compose exec -T chat composer install
          docker-compose exec -T chat php artisan config:cache
          docker-compose exec -T chat php artisan test

      - name: Setup Gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '390.0.0'
          service_account_key: ${{ secrets.GCE_SA_KEY }}
          project_id: ${{ secrets.GCE_PROJECT }}

      - name: Setup actions auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCE_SA_KEY }}

      - name: Deploy to GCE
        uses: 'google-github-actions/ssh-compute@v0'
        with:
          instance_name: chat-system-1
          zone: asia-east1-b
          ssh_private_key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          command: |
            sudo chmod 777 /var/run/docker.sock
            sudo chmod -R 777 storage
            cd /var/www/random-chat
            sudo chmod -R 777 .git
            sudo git config --global --add safe.directory /var/www/random-chat
            sudo git pull
            docker-compose exec -T chat php artisan env:decrypt --key=${{ secrets.PROJECT_ENV_KEY }} --env=production --force
            sudo cp .env.production .env
            docker-compose down
            docker pull $ONLINE_DOCKER_IMAGE/chat-system:latest
            docker-compose --env-file .env up -d
            docker-compose exec -T chat composer install
            docker-compose exec -T chat npm run build
            docker-compose exec -T chat service supervisor stop
            docker-compose exec -T chat service supervisor start
            docker-compose exec -T chat php artisan jwt:secret
